import json
import os
import re
import sys
import csv


from natsort import natsorted, ns
from decimal import Decimal
from pprint import pprint

versions = {
       	"https://www.cvedetails.com/vulnerability-list/vendor_id-874/product_id-3989/version_id-179224/Juniper-Junos-12.1x44.html"
}

with open('cve_output.csv', 'w') as csvfile:
       	writer = csv.writer(csvfile)
       	for version in versions:
       		try:
       			lynx_dump = os.popen('lynx --width 200 --dump ' + version + " 2> /dev/null").read()
       			#print('IOS version: ' + version.replace('\\', ''))

       			#with open('12.1.js') as f:
       			#      	entries = json.load(f)
       			cvss = {'low':0, 'medium':0, 'high':0, 'critical':0}
       			vuln_desc = ""
       			fixed = []
       			v = re.findall('Cpe\ Name\:cpe\:\/(\S+)', lynx_dump)[0]
       			entries = re.findall('\]CVE-.*\s*(\S+)', lynx_dump)
       			#pprint(data)
       			for entry in entries:
       				if Decimal(entry) < 4.0:
       					cvss['low'] += 1
       				elif Decimal(entry) >= 9.0:
       					cvss['critical'] += 1
       				elif Decimal(entry) >= 7.0 :
       					cvss['high'] += 1
       				else :
       					cvss['medium'] += 1

       			#Print to output
       			#sys.stdout.write(version.replace('\\', '') + '\t' + str(cvss['low']) + '\t' + str(cvss['medium']) + '\t' + str(cvss['high']) + '\t' + str(cvss['critical']) + '\t' + str(natsorted(fixed, reverse=True)[0]))


       			#Print to file in csv format:
       			writer.writerow([v ,str(cvss['low']),str(cvss['medium']),str(cvss['high']),str(cvss['critical']),'','',version])

       			print("processing: " + version)

       			#Stats in case
       			#print('\n\nlow: %d' %cvss['low'])
       			#print('medium: %d' %cvss['medium'])
       			#print('high: %d' %cvss['high'])
       			#print('critical: %d' %cvss['critical'])
       			#print('COMBINED FIRST FIXED OR NOT AFFECTED: ' + str(natsorted(fixed, reverse=True)))

       		except:
       			#print to output
       			print(version + '\t' + 'error')

       			#Print to file in csv format:
       			writer.writerow([version , 'error'])
